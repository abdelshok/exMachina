{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sergiybokhnyak/Desktop/Work/ChatBotLessons/express-app/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sergiybokhnyak/Desktop/Work/ChatBotLessons/express-app/client/src/components/AuthenticatedRoute.js\";\n// Authenticated Route\n// Component similar to the AppliedRoute component. Main difference is that we look at props \n// passed in to check if a user is authenticated, then we render the pased in component.\n// If user is not authenticated, we use Redirect React Router component to redirect the user\n// to the login page\n// External Packages\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // Authenticated Route set up to redirect to /login page if user is not authenticated\n\nexport default ((_ref) => {\n  let C = _ref.component,\n      cProps = _ref.props,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"props\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => cProps.isAuthenticated ? React.createElement(C, Object.assign({}, props, cProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/sergiybokhnyak/Desktop/Work/ChatBotLessons/express-app/client/src/components/AuthenticatedRoute.js"],"names":["React","Route","Redirect","C","component","cProps","props","rest","isAuthenticated"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,gBAAe;AAAA,MAAcC,CAAd,QAAGC,SAAH;AAAA,MAAwBC,MAAxB,QAAiBC,KAAjB;AAAA,MAAmCC,IAAnC;;AAAA,SACb,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAED,KAAK,IACXD,MAAM,CAACG,eAAP,GACI,oBAAC,CAAD,oBAAOF,KAAP,EAAkBD,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,GAEI,oBAAC,QAAD;AACE,MAAA,EAAE,EAAC,QADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADa;AAAA,CAAf","sourcesContent":["// Authenticated Route\n// Component similar to the AppliedRoute component. Main difference is that we look at props \n// passed in to check if a user is authenticated, then we render the pased in component.\n// If user is not authenticated, we use Redirect React Router component to redirect the user\n// to the login page\n\n// External Packages\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Authenticated Route set up to redirect to /login page if user is not authenticated\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated\n        ? <C {...props} {...cProps} />\n        : <Redirect\n            to=\"/login\"\n          />}\n  />;\n"]},"metadata":{},"sourceType":"module"}